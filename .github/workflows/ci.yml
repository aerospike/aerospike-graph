on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Aerospike Server and Graph
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose up -d
          # wait for Aerospike
          for i in {1..20}; do
            if nc -z aerospike-db 3000; then break; fi
            sleep 2
          done

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Upgrading Pip
        working-directory: python
        run: |
          python -m pip install --upgrade pip

      - name: Run pytest against python basic ui example
        working-directory: python/basic
        run: |
          pip install -r requirements.txt
          pytest tests/ -v --maxfail=1

      - name: Run pytest against python food_delivery_app
        working-directory: python/food_delivery_app
        run: |
          pip install -r requirements.txt
          pytest tests/ -v --maxfail=1

      - name: Install dependencies node-js
        working-directory: nodejs/basic
        run: npm ci

      - name: Run Mocha tests
        working-directory: nodejs/basic
        run: npm test

      - name: Run Playwright E2E tests
        working-directory: nodejs/basic
        run: |
          npx playwright install --with-deps
          npm run test:e2e

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Test Java Example
        working-directory: java/basic
        run: |
          mvn test

      - name: Close Docker Containers
        run: |
          docker-compose down

      - name: Install TLS test dependencies
        working-directory: python/tls
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install OpenSSL (required for certificate generation)
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl

      - name: Run AGS-to-AerospikeDB Certificate Tests
        working-directory: python/tls/tests
        run: |
          pytest test_AGS_DB_certificates.py -v

      - name: Run AGS-to-AerospikeDB Connection Tests
        working-directory: python/tls/tests
        run: |
          pytest test_AGS_DB_connection.py -v --maxfail=1
        timeout-minutes: 5

      - name: Run GremlinClient-to-AGS Certificate Tests
        working-directory: python/tls/tests
        run: |
          pytest test_Gremlin_AGS_certificates.py -v

      - name: Run GremlinClient-to-AGS Connection Tests
        working-directory: python/tls/tests
        run: |
          pytest test_Gremlin_AGS_connection.py -v --maxfail=1
        timeout-minutes: 5
